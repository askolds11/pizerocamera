"""
This type stub file was generated by pyright.
"""

from .output import Output as Output

"""Circular buffer"""
class CircularOutput2(Output):
    """
    Circular buffer implementation, much like CircularOutput, but for general outputs.

    This means it can be used in conjunction with, for example, a PyavOutput to create time-shifted
    recordings of both video and audio straight to an mp4 file.

    Once the CircularOutput2 has been started, use the open_output method to start start recording
    a new output, and use close_output when finished. If the output has not been closed when the
    circular buffer is stopped, then the remainder of the buffer will be flush into the output.
    """
    def __init__(self, pts=..., buffer_duration_ms=...) -> None:
        """Create a CircularOutput2."""
        ...
    
    @property
    def buffer_duration_ms(self) -> int:
        """Returns duration of the buffer in ms"""
        ...
    
    @buffer_duration_ms.setter
    def buffer_duration_ms(self, value) -> None:
        """Set buffer duration in ms, can even be changed dynamically"""
        ...
    
    def open_output(self, output) -> None:
        """Open a new output object and start writing to it."""
        ...
    
    def close_output(self) -> None:
        """Close an output object."""
        ...
    
    def outputframe(self, frame, keyframe=..., timestamp=..., packet=..., audio=...) -> None:
        """Write frame to circular buffer"""
        ...
    
    def start(self) -> None:
        """Start recording in the circular buffer."""
        ...
    
    def stop(self) -> None:
        """Close file handle and stop recording"""
        ...
    


