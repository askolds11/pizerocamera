"""
This type stub file was generated by pyright.
"""

import numpy as np
from typing import Tuple, Any

from numpy._typing import NDArray

"""
Yolov5 postprocessing

This code is based on:
https://github.com/ultralytics/ultralytics
"""
def postprocess_yolov8_detection(outputs: Tuple[np.ndarray, np.ndarray], conf: float = ..., iou_thres: float = ..., max_out_dets: int = ...) -> Tuple[np.ndarray, np.ndarray, np.ndarray]:
    """
    Postprocess the outputs of a YOLOv8 model for object detection

    Args:
        outputs (Tuple[np.ndarray, np.ndarray]): Tuple containing the model outputs for bounding boxes and class predictions.
        conf (float, optional): Confidence threshold for bounding box predictions. Default is 0.3
        iou_thres (float, optional): IoU (Intersection over Union) threshold for Non-Maximum Suppression (NMS). Default is 0.7.
        max_out_dets (int, optional): Maximum number of output detections to keep after NMS. Default is 50.

    Returns:
        Tuple[np.ndarray, np.ndarray, np.ndarray]: Tuple containing the post-processed bounding boxes,
            their corresponding scores, and categories.
    """
    ...

def postprocess_yolov8_keypoints(outputs: Tuple[np.ndarray, np.ndarray, np.ndarray], conf: float = ..., iou_thres: float = ..., max_out_dets: int = ...) -> Tuple[np.ndarray, np.ndarray, np.ndarray]:
    """
    Postprocess the outputs of a YOLOv8 model for object detection and pose estimation.

    Args:
        outputs (Tuple[np.ndarray, np.ndarray, np.ndarray]): Tuple containing the model outputs for bounding boxes,
        class predictions, and keypoint predictions.
        conf (float, optional): Confidence threshold for bounding box predictions. Default is 0.3
        iou_thres (float, optional): IoU (Intersection over Union) threshold for Non-Maximum Suppression (NMS). Default is 0.7.
        max_out_dets (int, optional): Maximum number of output detections to keep after NMS. Default is 300.

    Returns:
        Tuple[np.ndarray, np.ndarray, np.ndarray]: Tuple containing the post-processed bounding boxes, their
        corresponding scores, and keypoints.

    """
    ...

def postprocess_yolov8_inst_seg(outputs: Tuple[np.ndarray, np.ndarray, np.ndarray], conf: float = ..., iou_thres: float = ..., max_out_dets: int = ...) -> Tuple[np.ndarray, np.ndarray, np.ndarray]:
    ...

def make_anchors_yolo_v8(feats, strides, grid_cell_offset=...) -> tuple[NDArray[Any], NDArray[Any]]:
    """Generate anchors from features."""
    ...

def dist2bbox_yolo_v8(distance, anchor_points, xywh=..., dim=...) -> NDArray[Any]:
    """Transform distance(ltrb) to box(xywh or xyxy)."""
    ...

def pad_with_zeros(mask, roi, isp_output_size) -> NDArray[np.float64]:
    ...

def process_masks(masks, boxes, roi, isp_output_size) -> NDArray[np.float64]:
    ...

